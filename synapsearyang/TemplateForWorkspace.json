{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "synapsearyang"
		},
		"ADLSAirBnB_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLSAirBnB'"
		},
		"ASAAirBnB_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ASAAirBnB'"
		},
		"CDMAirBnB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CDMAirBnB'"
		},
		"fintechADLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'fintechADLS'"
		},
		"synapsearyang-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'synapsearyang-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:synapsearyang.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"ADLSAirBnB_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://airbnbaryan.dfs.core.windows.net/"
		},
		"ASAAirBnB_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "synapsearyang.sql.azuresynapse.net"
		},
		"ASAAirBnB_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "airbnb"
		},
		"ASAAirBnB_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "aryan"
		},
		"AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://keyvaultaryang.vault.azure.net/"
		},
		"AzureSynapseAnalyticsTest_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "synapsearyang.sql.azuresynapse.net"
		},
		"AzureSynapseAnalyticsTest_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "airbnb"
		},
		"fintechADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://airbnbaryan.dfs.core.windows.net/"
		},
		"synapsearyang-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://airbnbaryan.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/ADLS_To_SynapseDWH')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "MetaDataCustomerRawData",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CustomerRawData",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "MetaDataCustomerRawData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('MetaDataCustomerRawData').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CustomerRawToSynapse",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": "customer_raw_data",
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SqlDWSink",
											"writeBehavior": "Upsert",
											"upsertSettings": {
												"keys": [
													"customer_id"
												],
												"interimSchemaName": ""
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CustomerRawData",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SynapseCustomerDim",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "CustomerRawToArchive",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CustomerRawToSynapse",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": "customer_raw_data",
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": {
													"value": "last(split(item.name, \".\"))",
													"type": "Expression"
												}
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CustomerRawData",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "CustomerArchive",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "DeleteFromCustomerRaw",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CustomerRawToArchive",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "CustomerRawData",
											"type": "DatasetReference",
											"parameters": {}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "ADLSAirBnB",
												"type": "LinkedServiceReference"
											}
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"wildcardFileName": {
												"value": "@item().name",
												"type": "Expression"
											},
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-19T22:43:08Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/CustomerRawData')]",
				"[concat(variables('workspaceId'), '/datasets/SynapseCustomerDim')]",
				"[concat(variables('workspaceId'), '/datasets/CustomerArchive')]",
				"[concat(variables('workspaceId'), '/linkedServices/ADLSAirBnB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Cosmos_To_Synapse')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CosmoToSynapseDWH",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CosmoToSynapseDWH",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"BookingsData": {},
									"SynapseBookings": {},
									"SynapseFactWrite": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "ADLSAirBnB",
									"type": "LinkedServiceReference"
								},
								"folderPath": "airbnb"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "37a26394-0daf-48c3-93a0-a47b94e6a9d9"
							}
						}
					},
					{
						"name": "BookingAggregationSP",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CosmoToSynapseDWH",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[airbnb].[BookingAggregation]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalyticsTest",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-20T18:39:57Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/CosmoToSynapseDWH')]",
				"[concat(variables('workspaceId'), '/linkedServices/ADLSAirBnB')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalyticsTest')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/FinalPipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "RunCustomerDim",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ADLS_To_SynapseDWH",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BookingDIm",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RunCustomerDim",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Cosmos_To_Synapse",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-20T12:57:16Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/ADLS_To_SynapseDWH')]",
				"[concat(variables('workspaceId'), '/pipelines/Cosmos_To_Synapse')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CosmosBookings')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CDMAirBnB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"booking_id": {
							"type": "string"
						},
						"property_id": {
							"type": "string"
						},
						"customer_id": {
							"type": "integer"
						},
						"owner_id": {
							"type": "string"
						},
						"check_in_date": {
							"type": "string"
						},
						"check_out_date": {
							"type": "string"
						},
						"booking_date": {
							"type": "string"
						},
						"amount": {
							"type": "number"
						},
						"currency": {
							"type": "string"
						},
						"property_location": {
							"type": "object",
							"properties": {
								"city": {
									"type": "string"
								},
								"country": {
									"type": "string"
								}
							}
						},
						"timestamp": {
							"type": "string"
						}
					}
				},
				"typeProperties": {
					"collectionName": "bookings"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CDMAirBnB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CustomerArchive')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSAirBnB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "customer_archive",
						"fileSystem": "airbnb"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLSAirBnB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CustomerRawData')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSAirBnB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "customer_raw_data",
						"fileSystem": "airbnb"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "customer_id",
						"type": "String"
					},
					{
						"name": "first_name",
						"type": "String"
					},
					{
						"name": "last_name",
						"type": "String"
					},
					{
						"name": "email",
						"type": "String"
					},
					{
						"name": "phone_number",
						"type": "String"
					},
					{
						"name": "address",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "state",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "zip_code",
						"type": "String"
					},
					{
						"name": "signup_date",
						"type": "String"
					},
					{
						"name": "last_login",
						"type": "String"
					},
					{
						"name": "total_bookings",
						"type": "String"
					},
					{
						"name": "total_spent",
						"type": "String"
					},
					{
						"name": "preferred_language",
						"type": "String"
					},
					{
						"name": "referral_code",
						"type": "String"
					},
					{
						"name": "account_status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLSAirBnB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SynapseBookings')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ASAAirBnB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "booking_id",
						"type": "nvarchar"
					},
					{
						"name": "property_id",
						"type": "nvarchar"
					},
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "owner_id",
						"type": "nvarchar"
					},
					{
						"name": "check_in_date",
						"type": "date"
					},
					{
						"name": "check_out_date",
						"type": "date"
					},
					{
						"name": "booking_date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "amount",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "currency",
						"type": "nvarchar"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "country",
						"type": "nvarchar"
					},
					{
						"name": "full_address",
						"type": "nvarchar"
					},
					{
						"name": "stay_duration",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "booking_year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "booking_month",
						"type": "int",
						"precision": 10
					},
					{
						"name": "timestamp",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "airbnb",
					"table": "bookings_fact"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ASAAirBnB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SynapseBookingsNew')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalyticsTest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "booking_id",
						"type": "nvarchar"
					},
					{
						"name": "property_id",
						"type": "nvarchar"
					},
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "owner_id",
						"type": "nvarchar"
					},
					{
						"name": "check_in_date",
						"type": "date"
					},
					{
						"name": "check_out_date",
						"type": "date"
					},
					{
						"name": "booking_date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "amount",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "currency",
						"type": "nvarchar"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "country",
						"type": "nvarchar"
					},
					{
						"name": "full_address",
						"type": "nvarchar"
					},
					{
						"name": "stay_duration",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "booking_year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "booking_month",
						"type": "int",
						"precision": 10
					},
					{
						"name": "timestamp",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "airbnb",
					"table": "bookings_fact"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalyticsTest')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SynapseCustomerDim')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ASAAirBnB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "nvarchar"
					},
					{
						"name": "last_name",
						"type": "nvarchar"
					},
					{
						"name": "email",
						"type": "nvarchar"
					},
					{
						"name": "phone_number",
						"type": "nvarchar"
					},
					{
						"name": "address",
						"type": "nvarchar"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "state",
						"type": "nvarchar"
					},
					{
						"name": "country",
						"type": "nvarchar"
					},
					{
						"name": "zip_code",
						"type": "nvarchar"
					},
					{
						"name": "signup_date",
						"type": "date"
					},
					{
						"name": "last_login",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "total_bookings",
						"type": "int",
						"precision": 10
					},
					{
						"name": "total_spent",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "preferred_language",
						"type": "nvarchar"
					},
					{
						"name": "referral_code",
						"type": "nvarchar"
					},
					{
						"name": "account_status",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "airbnb",
					"table": "customer_dim"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ASAAirBnB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADLSAirBnB')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSAirBnB_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLSAirBnB_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ASAAirBnB')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('ASAAirBnB_properties_typeProperties_server')]",
					"database": "[parameters('ASAAirBnB_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('ASAAirBnB_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ASAAirBnB_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureKeyVault')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseAnalyticsTest')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('AzureSynapseAnalyticsTest_properties_typeProperties_server')]",
					"database": "[parameters('AzureSynapseAnalyticsTest_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SystemAssignedManagedIdentity"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CDMAirBnB')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CDMAirBnB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/fintechADLS')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('fintechADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('fintechADLS_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapsearyang-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synapsearyang-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapsearyang-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('synapsearyang-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CosmoToSynapseDWH')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CosmosBookings",
								"type": "DatasetReference"
							},
							"name": "BookingsData"
						},
						{
							"dataset": {
								"referenceName": "SynapseBookingsNew",
								"type": "DatasetReference"
							},
							"name": "SynapseBookings"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SynapseBookingsNew",
								"type": "DatasetReference"
							},
							"name": "SynapseFactWrite",
							"rejectedDataLinkedService": {
								"referenceName": "ADLSAirBnB",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "Filtering"
						},
						{
							"name": "derivedColumns"
						},
						{
							"name": "lookupInSynapse"
						},
						{
							"name": "UpdateOrInsert"
						},
						{
							"name": "SelectFinalColumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          booking_id as string,",
						"          property_id as string,",
						"          customer_id as integer,",
						"          owner_id as string,",
						"          check_in_date as string,",
						"          check_out_date as string,",
						"          booking_date as string,",
						"          amount as double,",
						"          currency as string,",
						"          property_location as (city as string, country as string),",
						"          timestamp as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     enableChangeFeed: true,",
						"     changeFeedStartFromTheBeginning: true,",
						"     format: 'document') ~> BookingsData",
						"source(output(",
						"          booking_id as string,",
						"          property_id as string,",
						"          customer_id as integer,",
						"          owner_id as string,",
						"          check_in_date as date,",
						"          check_out_date as date,",
						"          booking_date as timestamp,",
						"          amount as decimal(10,2),",
						"          currency as string,",
						"          city as string,",
						"          country as string,",
						"          full_address as string,",
						"          stay_duration as long,",
						"          booking_year as integer,",
						"          booking_month as integer,",
						"          timestamp as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> SynapseBookings",
						"BookingsData split(check_in_date > check_out_date,",
						"     disjoint: false) ~> Filtering@(BadRecords, AcceptedRecords)",
						"Filtering@AcceptedRecords derive(stay_duration = (toTimestamp(check_out_date) - toTimestamp(check_out_date))/86400000,",
						"          booking_year = year(toDate(booking_date)),",
						"          booking_month = month(toDate(booking_date)),",
						"          full_address = concat(property_location.city,\", \", property_location.country),",
						"          city = property_location.city,",
						"          country = property_location.country,",
						"          booking_id = booking_id,",
						"          booking_date = booking_date,",
						"          check_out_date = check_out_date,",
						"          check_in_date = check_in_date,",
						"          customer_id = customer_id,",
						"          timestamp = timestamp,",
						"          owner_id = owner_id,",
						"          amount = amount,",
						"          property_location = property_location,",
						"          currency = currency,",
						"          property_id = property_id) ~> derivedColumns",
						"derivedColumns, SynapseBookings lookup(derivedColumns@booking_id == SynapseBookings@booking_id,",
						"     multiple: false,",
						"     pickup: 'first',",
						"     desc(SynapseBookings@timestamp, true),",
						"     broadcast: 'auto')~> lookupInSynapse",
						"lookupInSynapse alterRow(insertIf(isNull(SynapseBookings@booking_id)),",
						"     updateIf(not(isNull(SynapseBookings@booking_id)))) ~> UpdateOrInsert",
						"UpdateOrInsert select(mapColumn(",
						"          booking_id = derivedColumns@booking_id,",
						"          property_id = derivedColumns@property_id,",
						"          customer_id = derivedColumns@customer_id,",
						"          owner_id = derivedColumns@owner_id,",
						"          check_in_date = derivedColumns@check_in_date,",
						"          check_out_date = derivedColumns@check_out_date,",
						"          booking_date = derivedColumns@booking_date,",
						"          amount = derivedColumns@amount,",
						"          currency = derivedColumns@currency,",
						"          timestamp = derivedColumns@timestamp,",
						"          stay_duration = derivedColumns@stay_duration,",
						"          booking_year = derivedColumns@booking_year,",
						"          booking_month = derivedColumns@booking_month,",
						"          full_address = derivedColumns@full_address,",
						"          city = derivedColumns@city,",
						"          country = derivedColumns@country",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> SelectFinalColumns",
						"SelectFinalColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          booking_id as string,",
						"          property_id as string,",
						"          customer_id as integer,",
						"          owner_id as string,",
						"          check_in_date as date,",
						"          check_out_date as date,",
						"          booking_date as timestamp,",
						"          amount as decimal(10,2),",
						"          currency as string,",
						"          city as string,",
						"          country as string,",
						"          full_address as string,",
						"          stay_duration as long,",
						"          booking_year as integer,",
						"          booking_month as integer,",
						"          timestamp as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:['booking_id'],",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SynapseFactWrite"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/CosmosBookings')]",
				"[concat(variables('workspaceId'), '/datasets/SynapseBookingsNew')]",
				"[concat(variables('workspaceId'), '/linkedServices/ADLSAirBnB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AirBnBBookingFactAggregationSP')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\n-- Grant SELECT on the entire schema (recommended)\n--GRANT SELECT ON SCHEMA::[airbnb] TO [adfaryang];\n\n-- Or grant SELECT on specific table (if needed)\n-- GRANT SELECT ON OBJECT::[airbnb].[Bookings_fact] TO [adfaryang];\n-- Check you're in correct DB\nSELECT DB_NAME() AS CurrentDB;\n\n\n\n-- Give it permissions on the schema/table\nGRANT SELECT ON airbnb.bookings_fact TO [adfaryang];\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "airbnb",
						"poolName": "airbnb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AirBnB_SQL')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'Deadpool@007';\nOPEN MASTER KEY DECRYPTION BY PASSWORD = 'Deadpool@007';\n\n-- -- Create schema if not exists\n-- IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'airbnb')\n-- BEGIN\n--     EXEC('CREATE SCHEMA airbnb')\n-- END\n-- GO\n\n-- -- Create customer_dim table\n-- CREATE TABLE airbnb.customer_dim (\n--     customer_id INT, \n--     first_name NVARCHAR(100),\n--     last_name NVARCHAR(100),\n--     email NVARCHAR(255),\n--     phone_number NVARCHAR(50),\n--     address NVARCHAR(255),\n--     city NVARCHAR(100),\n--     state NVARCHAR(100),\n--     country NVARCHAR(100),\n--     zip_code NVARCHAR(20),\n--     signup_date DATE,\n--     last_login DATETIME2,\n--     total_bookings INT,\n--     total_spent DECIMAL(10, 2),\n--     preferred_language NVARCHAR(50),\n--     referral_code NVARCHAR(50),\n--     account_status NVARCHAR(50)\n-- )\n-- WITH\n-- (\n--     DISTRIBUTION = ROUND_ROBIN,\n--     HEAP\n-- )\n-- GO\n\n-- -- Create bookings_fact table\n-- CREATE TABLE airbnb.bookings_fact (\n--     booking_id NVARCHAR(100),\n--     property_id NVARCHAR(100),\n--     customer_id INT,\n--     owner_id NVARCHAR(100),\n--     check_in_date DATE,\n--     check_out_date DATE,\n--     booking_date DATETIME2,\n--     amount DECIMAL(10,2),\n--     currency NVARCHAR(10),\n--     city NVARCHAR(100),\n--     country NVARCHAR(100),\n--     full_address NVARCHAR(255),\n--     stay_duration BIGINT,\n--     booking_year INT,\n--     booking_month INT,\n--     timestamp DATETIME2\n-- )\n-- WITH\n-- (\n--     DISTRIBUTION = ROUND_ROBIN,\n--     HEAP\n-- )\n-- GO\n\n-- Check the tables\n-- SELECT * FROM airbnb.customer_dim;\n-- SELECT * FROM airbnb.bookings_fact;\n\n\n--------------------------------------------\n------------------------------------\n\n-- CREATE TABLE airbnb.BookingCustomerAggregation\n-- WITH (DISTRIBUTION = ROUND_ROBIN)\n-- AS\n-- SELECT \n--     c.country,\n--     COUNT_BIG(*) AS total_bookings,\n--     SUM(ISNULL(b.amount, 0)) AS total_amount,\n--     MAX(b.booking_date) AS last_booking_date\n-- FROM \n--     airbnb.bookings_fact b\n-- JOIN \n--     airbnb.customer_dim c ON b.customer_id = c.customer_id\n-- GROUP BY \n--     c.country;\n\nCREATE PROCEDURE airbnb.BookingAggregation\nAS\nBEGIN\n    TRUNCATE TABLE airbnb.BookingCustomerAggregation;\n\n    INSERT INTO airbnb.BookingCustomerAggregation\n    SELECT \n        c.country,\n        COUNT_BIG(*) AS total_bookings,\n        SUM(ISNULL(b.amount, 0)) AS total_amount,\n        MAX(b.booking_date) AS last_booking_date\n    FROM \n        airbnb.bookings_fact b\n    JOIN \n        airbnb.customer_dim c ON b.customer_id = c.customer_id\n    GROUP BY \n        c.country;\nEND;\n\n-- EXEC [airbnb].[BookingAggregation];\n\n-- select * from airbnb.BookingCustomerAggregation;\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "airbnb",
						"poolName": "airbnb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- CREATE USER [adfaryang] FROM EXTERNAL PROVIDER;\n-- -- ALTER ROLE db_owner ADD MEMBER [adfaryang];\n\n-- -- - Create the user for ADF Managed Identity\n-- -- CREATE USER [<your-adf-name>] FROM EXTERNAL PROVIDER;\n\n-- -- Grant necessary permissions (pick one)\n-- ALTER ROLE db_datareader ADD MEMBER [adfaryang];\n-- ALTER ROLE db_datawriter ADD MEMBER [adfaryang];\n-- -- OR for full access\n-- -- ALTER ROLE db_owner ADD MEMBER [<your-adf-name>];\nSELECT name, type_desc FROM sys.database_principals\nWHERE name = 'adfaryang';\n\n\n\n-- Step 2: Grant roles using Synapse-compatible command\nEXEC sp_addrolemember 'db_datareader', 'adfaryang';\nEXEC sp_addrolemember 'db_datawriter', 'adfaryang';\n-- Or:\n-- EXEC sp_addrolemember 'db_owner', 'adfaryang';\n\n-- ALTER ROLE db_owner ADD MEMBER [adfaryang];\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "airbnb",
						"poolName": "airbnb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [booking_id]\n,[property_id]\n,[customer_id]\n,[owner_id]\n,[check_in_date]\n,[check_out_date]\n,[booking_date]\n,[amount]\n,[currency]\n,[city]\n,[country]\n,[full_address]\n,[stay_duration]\n,[booking_year]\n,[booking_month]\n,[timestamp]\n FROM [airbnb].[bookings_fact]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "airbnb",
						"poolName": "airbnb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 3')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- SELECT TOP (100) [customer_id]\n-- ,[first_name]\n-- ,[last_name]\n-- ,[email]\n-- ,[phone_number]\n-- ,[address]\n-- ,[city]\n-- ,[state]\n-- ,[country]\n-- ,[zip_code]\n-- ,[signup_date]\n-- ,[last_login]\n-- ,[total_bookings]\n-- ,[total_spent]\n-- ,[preferred_language]\n-- ,[referral_code]\n-- ,[account_status]\n--  FROM [airbnb].[customer_dim]\n\n\n TRUNCATE table [airbnb].[customer_dim]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "airbnb",
						"poolName": "airbnb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 4')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "TRUNCATE TABLE airbnb.bookings_fact\nTRUNCATE table airbnb.customer_dim",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "airbnb",
						"poolName": "airbnb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 5')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\n -- TODO: Set parameter values here \n\n CREATE TABLE airbnb.BookingCustomerAggregation\nWITH (DISTRIBUTION = ROUND_ROBIN)\nAS\nSELECT \n    c.country,\n    COUNT_BIG(*) AS total_bookings,\n    SUM(ISNULL(b.amount, 0)) AS total_amount,\n    MAX(b.booking_date) AS last_booking_date\nFROM \n    airbnb.bookings_fact b\nJOIN \n    airbnb.customer_dim c ON b.customer_id = c.customer_id\nGROUP BY \n    c.country;\n\n EXECUTE [airbnb].[BookingAggregation]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "airbnb",
						"poolName": "airbnb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 6')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE PROC [airbnb].[BookingAggregation] AS\nBEGIN\n    TRUNCATE TABLE airbnb.BookingCustomerAggregation;\n\n    INSERT INTO airbnb.BookingCustomerAggregation\n    SELECT \n        c.country,\n        COUNT_BIG(*) AS total_bookings,\n        SUM(ISNULL(b.amount, 0)) AS total_amount,\n        MAX(b.booking_date) AS last_booking_date\n    FROM \n        airbnb.bookings_fact b\n    JOIN \n        airbnb.customer_dim c ON b.customer_id = c.customer_id\n    GROUP BY \n        c.country;\nEND;\n\n-- EXEC [airbnb].[BookingAggregation];\n\n-- select * from airbnb.BookingCustomerAggregation;\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "airbnb",
						"poolName": "airbnb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/airbnb')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "centralus"
		}
	]
}